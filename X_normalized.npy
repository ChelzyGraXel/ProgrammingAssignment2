{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "e536d81d-b12b-49f0-a5fa-603e998ee0ee",
   "metadata": {},
   "source": [
    "# Experiment 2: Numerical Python (Numpy)\n",
    "#### Name: Ti√±ana, Chelzy Gracel\n",
    "#### Section: 2ECE-D"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3d513645-b20b-49b1-9c82-8e86b3f7ab60",
   "metadata": {},
   "source": [
    "## NORMALIZATION PROBLEM\n",
    "#### Normalization is one of the most basic preprocessing techniques in data analytics. This involves centering and scaling process. Centering means subtracting the data from the mean and scaling means dividing with its standard deviation. Mathematically, normalization can be expressed as: Z = (X-Mean)/Standard Deviation\n",
    "\n",
    "#### In Python, element-wise mean and element-wise standard deviation can be obtained by using .mean() and .std() calls\n",
    "\n",
    "#### In this problem, create a 5x5 ndarray and store it to variable X. Normalize X. Save your ndarray as X_normalized.npy"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "id": "8d8ffb70-d860-4a74-99ba-3134590e0f1e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[11, 33, 41, 30, 96],\n",
       "       [96, 58, 85, 21, 69],\n",
       "       [98, 82, 38, 41, 42],\n",
       "       [59, 31, 51, 43, 70],\n",
       "       [31, 26, 65, 44,  2]])"
      ]
     },
     "execution_count": 53,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import numpy as np\n",
    "\n",
    "# Create a 5x5 ndarray and store to variable X.\n",
    "X = np.random.randint(1,100, size=(5,5))\n",
    "X"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 119,
   "id": "38ed45f4-3017-4aa4-acb5-e0b3df649a99",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[-1.51471044 -0.67150119 -0.36487964 -0.78648427  1.74314349]\n",
      " [ 1.74314349  0.28669115  1.32153886 -1.13143351  0.70829577]\n",
      " [ 1.81979888  1.20655578 -0.47986272 -0.36487964 -0.32655195]\n",
      " [ 0.32501884 -0.74815657  0.01839729 -0.28822425  0.74662346]\n",
      " [-0.74815657 -0.93979504  0.554985   -0.24989656 -1.85965968]]\n"
     ]
    }
   ],
   "source": [
    "# Calculate the mean of the ndArray.\n",
    "mean = np.mean(X)\n",
    "\n",
    "# Calculate the standard deviation of the ndArray.\n",
    "stddev = np.std(X)\n",
    "\n",
    "# Normalize the array\n",
    "n = X - mean\n",
    "X_normalized = n/stddev\n",
    "\n",
    "print(X_normalized)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
